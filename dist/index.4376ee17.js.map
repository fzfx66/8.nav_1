{"mappings":"ACAA,MAAM,EAAY,EAAE,aACd,EAAU,EAAU,IAAI,CAAC,WAIzB,EAAU,AAFO,KAAK,KAAK,CADhB,aAAa,OAAO,CAAC,cAGJ,CAChC,CAAC,KAAK,IAAI,IAAI,sBAAsB,EACpC,CAAC,KAAK,IAAI,IAAI,2BAA2B,EAC1C,CAEK,EAAc,AAAC,GACZ,EAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,QAAS,IAAI,OAAO,CAAC,IAAI,IAGxG,EAAS,KACb,EAAU,IAAI,CAAC,iBAAiB,MAAM,GAEtC,EAAQ,OAAO,CAAC,CAAC,EAAK,KACpB,IAAM,EAAM,EAAE,CAAC;;0BAEO,EAAE,EAAY,EAAK,GAAG,CAAC,CAAC,EAAE,CAAC,WAAW,GAAG;0BACzC,EAAE,EAAY,EAAK,GAAG,EAAE;;;OAG3C,CAAC,EAAE,YAAY,CAAC,GACrB,EAAI,EAAE,CAAC,QAAQ,KACb,OAAO,IAAI,CAAC,EAAK,GAAG,CACtB,GACA,EAAI,EAAE,CAAC,QAAQ,SAAS,AAAC,IACvB,EAAE,eAAe,GACjB,EAAQ,MAAM,CAAC,EAAM,GACrB,IACA,aAAa,OAAO,CAAC,WAAW,KAAK,SAAS,CAAC,GAC/C,EACF,EACF,EAEA,IAEA,EAAE,cACG,EAAE,CAAC,QAAQ,KACR,IAAI,EAAa,OAAO,MAAM,CAAC,cACC,CAAA,IAA7B,EAAW,OAAO,CAAC,SAClB,CAAA,EAAa,WAAY,CAD7B,EAGA,EAAQ,IAAI,CAAC,CACX,IAAI,CACN,GACA,aAAa,OAAO,CAAC,WAAW,KAAK,SAAS,CAAC,IAE/C,GACJ,GAEJ,EAAE,UAAU,EAAE,CAAC,WAAW,AAAC,IACzB,IAAI,IAAI,EAAE,EAAG,EAAE,EAAQ,MAAM,CAAE,IAChB,EAAY,CAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,GAC/B,EAAE,GAAG,EACf,OAAO,IAAI,CAAC,CAAO,CAAC,EAAE,CAAC,GAAG,CAGhC","sources":["<anon>","src/main.js"],"sourcesContent":["const $siteList = $(\".siteList\");\nconst $lastLi = $siteList.find(\"li.last\");\nconst siteList = localStorage.getItem(\"siteList\");\nconst siteListObject = JSON.parse(siteList);\n// 将字符串转变为对应的对象;若 siteList 为空，返回 null；\nconst hashMap = siteListObject || [\n    {\n        logo: \"A\",\n        url: \"https://www.acfun.cn\"\n    },\n    {\n        logo: \"B\",\n        url: \"https://www.bilibili.com/\"\n    }\n];\nconst simplifyUrl = (url)=>{\n    return url.replace(\"https://\", \"\").replace(\"http://\", \"\").replace(\"www.\", \"\").replace(\"//.*/\", \"\").replace(\"/\", \"\") //删除 / 开头的内容\n    ;\n};\nconst render = ()=>{\n    $siteList.find(\"li:not(.last)\").remove();\n    //找寻所有li（除了最后一个具新增功能的li），清空\n    hashMap.forEach((node, index)=>{\n        const $li = $(`<li>\r\n      <div class=\"site\">\r\n        <div class=\"logo\">${simplifyUrl(node.url)[0].toUpperCase()}</div>\r\n        <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n        <div class='close'>\\xd7</div>\r\n      </div>\r\n  </li>`).insertBefore($lastLi);\n        $li.on(\"click\", ()=>{\n            window.open(node.url) //可代替a标签的功能，比a标签更具操作空间 \n            ;\n        });\n        $li.on(\"click\", \".close\", (e)=>{\n            e.stopPropagation() //点击关闭按钮时阻止冒泡\n            ;\n            hashMap.splice(index, 1);\n            render();\n            localStorage.setItem(\"siteList\", JSON.stringify(hashMap));\n        });\n    });\n};\nrender();\n$(\".addButton\").on(\"click\", ()=>{\n    let user_input = window.prompt(\"\\u8BF7\\u95EE\\u4F60\\u8981\\u6DFB\\u52A0\\u7684\\u7F51\\u5740\\u662F\\uFF1F\");\n    if (user_input.indexOf(\"http\") !== 0) user_input = \"https://\" + user_input;\n    hashMap.push({\n        url: user_input\n    });\n    localStorage.setItem(\"siteList\", JSON.stringify(hashMap));\n    // 在本地的存储里面设置 siteList ，siteList 的值就是 JSON…… ；\n    render();\n});\n$(document).on(\"keypress\", (e)=>{\n    for(let i = 0; i < hashMap.length; i++){\n        const logo = simplifyUrl(hashMap[i].url)[0];\n        if (logo === e.key) window.open(hashMap[i].url);\n    }\n}) // 解决bug，在输入框输入时也会触发按键事件\n;\n\n//# sourceMappingURL=index.4376ee17.js.map\n","const $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last')\r\nconst siteList = localStorage.getItem('siteList')\r\nconst siteListObject = JSON.parse(siteList)\r\n// 将字符串转变为对应的对象;若 siteList 为空，返回 null；\r\nconst hashMap = siteListObject || [\r\n  {logo:'A',url:'https://www.acfun.cn'},\r\n  {logo:'B',url:'https://www.bilibili.com/'}\r\n]\r\n\r\nconst simplifyUrl = (url)=>{\r\n  return url.replace('https://','').replace('http://','').replace('www.','').replace('/\\/.*/','').replace('/','')    //删除 / 开头的内容\r\n}\r\n\r\nconst render = ()=>{\r\n  $siteList.find('li:not(.last)').remove()  \r\n  //找寻所有li（除了最后一个具新增功能的li），清空\r\n  hashMap.forEach((node,index)=>{\r\n    const $li = $(`<li>\r\n      <div class=\"site\">\r\n        <div class=\"logo\">${simplifyUrl(node.url)[0].toUpperCase()}</div>\r\n        <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n        <div class='close'>×</div>\r\n      </div>\r\n  </li>`).insertBefore($lastLi)\r\n  $li.on('click',()=>{\r\n    window.open(node.url)    //可代替a标签的功能，比a标签更具操作空间 \r\n  })\r\n  $li.on('click','.close',(e)=>{\r\n    e.stopPropagation()      //点击关闭按钮时阻止冒泡\r\n    hashMap.splice(index,1)\r\n    render()\r\n    localStorage.setItem('siteList',JSON.stringify(hashMap))\r\n    })   \r\n  })\r\n}\r\n\r\nrender()\r\n\r\n$('.addButton')\r\n    .on('click',()=>{\r\n        let user_input = window.prompt('请问你要添加的网址是？')\r\n        if(user_input.indexOf('http')!==0){\r\n            user_input = 'https://'+ user_input\r\n        }\r\n        hashMap.push({\r\n          url:user_input\r\n        })\r\n        localStorage.setItem('siteList',JSON.stringify(hashMap))\r\n         // 在本地的存储里面设置 siteList ，siteList 的值就是 JSON…… ；\r\n        render()\r\n    })\r\n\r\n$(document).on('keypress',(e)=>{\r\n  for(let i=0; i<hashMap.length; i++){\r\n    const logo = simplifyUrl(hashMap[i].url)[0]\r\n    if(logo === e.key){\r\n      window.open(hashMap[i].url)\r\n    }\r\n  }\r\n})\r\n\r\n// 解决bug，在输入框输入时也会触发按键事件\r\n"],"names":["$siteList","$","$lastLi","find","hashMap","siteListObject","JSON","parse","localStorage","getItem","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","toUpperCase","insertBefore","on","window","open","e","stopPropagation","splice","setItem","stringify","user_input","prompt","indexOf","push","document","i","length","key"],"version":3,"file":"index.4376ee17.js.map"}